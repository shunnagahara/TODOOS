{"version":3,"sources":["serviceWorker.js","components/Top.jsx","components/Form.jsx","components/TodoList.jsx","components/Validation.jsx","components/Work.jsx","components/Private.jsx","components/DoneList.jsx","components/Done.jsx","components/Menu.jsx","index.jsx"],"names":["Boolean","window","location","hostname","match","Top","className","Component","Form","props","onSubmit","handleAdd","name","type","onChange","e","handleChange","disabled","message","title","initFlag","value","btn","cursor","TodoList","todos","map","todo","i","key","style","onClick","handleRemove","handleDone","Validation","formValidate","Work","setState","target","getByteLength","state","info","bind","str","length","c","charCodeAt","lists","localStorage","getItem","JSON","parse","this","preventDefault","push","json","stringify","setItem","splice","workLists","targetList","handleDoneAdd","doneLists","date","Date","today","getFullYear","getMonth","slice","getDate","Object","keys","Private","privateLists","isDisplayDate","DoneList","Done","sort","a","b","textDecoration","color","Menu","to","path","exact","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a6748eaf.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Top extends Component {\n  render() {\n    return (\n      <div className=\"siimple-box siimple--bg-dark\">\n        <h1 className=\"siimple-box-title siimple--color-white\">TODOOS</h1>\n        <div className=\"siimple-rule\"></div>\n        <div className=\"siimple-box siimple--bg-white\">\n          <div>\n            <h3 className=\"siimple--color-black\">Introduction</h3>\n            <div className=\"siimple-rule\"></div>\n            <div className=\"siimple-paragraph siimple-paragraph--lead\">\n            <p>This app is what it manage what you have to do.\n            You can manage work's and private's task.\n            I hope your managing is going to be better than now.</p>\n            </div>\n            <div className=\"siimple-footer-title\">Yours truly,</div>\n            <div className=\"siimple-footer-title\">Shun Nagahara</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\r\n\r\nconst Form = (props) => (\r\n  <form className=\"siimple-form\" onSubmit={props.handleAdd}>\r\n    <label className=\"siimple-label siimple--color-white\">Your todo:</label>\r\n    <div className=\"siimple-form-field\">\r\n        <input name=\"title\" type=\"text\" className=\"siimple-input m-left-m-20\" onChange={e => props.handleChange(e)}/>\r\n        <input type=\"submit\" disabled={props.message.title || props.initFlag && true} value=\"Add\" className=\"siimple-btn siimple-btn--teal ios-style-none\"/>\r\n    </div>\r\n    {props.message.title && (<div className=\"siimple--color-error\">{props.message.title}</div>)}\r\n  </form>\r\n);\r\n\r\nexport default Form;","import React, { Component } from 'react';\r\n\r\nlet btn = { cursor: 'pointer' };\r\n\r\nconst TodoList = (props) => (\r\n   <div className=\"siimple-list\">\r\n     {props.todos.map((todo, i) => {\r\n       return <div key={i} className=\"siimple-list-item siimple--bg-white\">{todo.title} <span className=\"siimple-tag siimple-tag--error siimple-hover\" style={btn} onClick={() => props.handleRemove(i)}>Delete</span><span className=\"siimple-tag siimple-tag--success m-right-10\" style={btn} onClick={() => props.handleDone(i)}>Done</span></div>\r\n     })}\r\n   </div>\r\n)\r\n\r\nexport default TodoList;","const titleValidation = (title) => {\n   if (title === 0) return 'Enter something';\n   if (title > 12) return 'Enter using less than 12 bytes';\n  return '';\n};\nclass Validation {\n  static formValidate = (type, value) => {\n    switch (type) {\n      case 'title':\n        return titleValidation(value);\n    }\n  };\n}\n\nexport default Validation;","import React, { Component } from 'react';\r\nimport Form from './Form';\r\nimport TodoList from  './TodoList';\r\nimport Validation from './Validation';\r\n\r\nexport default class Work extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      todo: [],\r\n      initFlag: true,\r\n      info: {\r\n        title: '',\r\n      },\r\n      message: {\r\n        title: '',\r\n      }\r\n    };\r\n    this.handleAdd = this.handleAdd.bind(this);\r\n    this.handleRemove = this.handleRemove.bind(this);\r\n    this.handleDone = this.handleDone.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  getByteLength(str){\r\n    var length = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n      var c = str.charCodeAt(i);\r\n      if ((c >= 0x0 && c < 0x81) || (c === 0xf8f0) || (c >= 0xff61 && c < 0xffa0) || (c >= 0xf8f1 && c < 0xf8f4)) {\r\n        length += 1;\r\n      } else {\r\n        length += 2;\r\n      }\r\n    }\r\n    return length;\r\n  }\r\n  componentDidMount(){\r\n    // LocalStorageから一覧を取得してstateに保存する\r\n    let lists = window.localStorage.getItem('work')\r\n    if (lists) {\r\n      lists = JSON.parse(lists)\r\n      this.setState({todo: lists});\r\n    }\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({initFlag: false});\r\n    const key = e.target.name;\r\n    const value = this.getByteLength(e.target.value)\r\n    const { info, message } = this.state;\r\n\r\n    this.setState({\r\n      info: { ...info, [key]: value }\r\n    });\r\n    this.setState({\r\n      message: {\r\n        ...message,\r\n        [key]: Validation.formValidate(key, value)\r\n      }\r\n    });\r\n  };\r\n  // データ保存処理\r\n  handleAdd(e){\r\n    // リダイレクト防止\r\n    e.preventDefault();\r\n    // フォームから受け取ったデータをオブジェクトに挿入して、stateのtodo配列に追加\r\n    this.state.todo.push({title: e.target.title.value}); // まだ保存されていない\r\n    // setStateを使ってstateを上書き\r\n    this.setState({todo: this.state.todo}); // 保存完了\r\n    // inputのvalueを空に\r\n    e.target.title.value = '';\r\n    this.setState({initFlag: true});\r\n    // JSON形式でLocalStorageに保存する\r\n    let json = JSON.stringify(this.state.todo)\r\n    window.localStorage.setItem('work', json)\r\n  }\r\n  handleRemove(i){\r\n    // todo配列からi番目から1つ目のデータを除外\r\n    this.state.todo.splice(i,1);\r\n    // setStateでtodo配列を上書き\r\n    this.setState({todo: this.state.todo});\r\n    // LocalStorageからデータを取得して対象のlistを削除して保存する\r\n    let workLists = window.localStorage.getItem('work')\r\n    workLists = JSON.parse(workLists)\r\n    workLists.splice(i,1);\r\n    let json = JSON.stringify(workLists)\r\n    window.localStorage.setItem('work', json)\r\n  }\r\n  handleDone(i){\r\n    // todo配列からi番目から1つ目のデータを除外\r\n    this.state.todo.splice(i,1);\r\n    // setStateでtodo配列を上書き\r\n    this.setState({todo: this.state.todo});\r\n    // LocalStorageからデータを取得して対象のlistを削除して保存する\r\n    let workLists = window.localStorage.getItem('work')\r\n    workLists = JSON.parse(workLists)\r\n    let targetList = workLists[i]\r\n    workLists.splice(i,1);\r\n    let json = JSON.stringify(workLists)\r\n    window.localStorage.setItem('work', json)\r\n    this.handleDoneAdd(targetList[\"title\"])\r\n  }\r\n  // done追加処理\r\n  handleDoneAdd(title){\r\n    let doneLists = window.localStorage.getItem('done')\r\n    if (!doneLists) {\r\n      doneLists = []\r\n    } else {\r\n      doneLists = JSON.parse(doneLists)\r\n    }\r\n    let date = new Date\r\n    let today = date.getFullYear() + '-' + (\"0\"+(date.getMonth() + 1)).slice(-2) + '-' + (\"0\"+date.getDate()).slice(-2)\r\n    doneLists[Object.keys(doneLists).length] = {title:title, date:today, type:'work'}\r\n    let json = JSON.stringify(doneLists)\r\n    window.localStorage.setItem('done', json)\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"siimple-box siimple--bg-dark\">\r\n        <h1 className=\"siimple-box-title siimple--color-white\">Work</h1>\r\n        <Form initFlag={this.state.initFlag} message={ this.state.message } handleAdd={this.handleAdd} handleChange={this.handleChange}/>\r\n        <div className=\"siimple-rule\"></div>\r\n        <TodoList todos={this.state.todo} handleRemove={this.handleRemove} handleDone={this.handleDone}/>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport Form from './Form';\r\nimport TodoList from  './TodoList';\r\nimport Validation from './Validation';\r\n\r\nexport default class Private extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      todo: [],\r\n      initFlag: true,\r\n      info: {\r\n        title: '',\r\n      },\r\n      message: {\r\n        title: '',\r\n      }\r\n    };\r\n    this.handleAdd = this.handleAdd.bind(this);\r\n    this.handleRemove = this.handleRemove.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleDone = this.handleDone.bind(this);\r\n  }\r\n  getByteLength(str){\r\n    var length = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n      var c = str.charCodeAt(i);\r\n      if ((c >= 0x0 && c < 0x81) || (c === 0xf8f0) || (c >= 0xff61 && c < 0xffa0) || (c >= 0xf8f1 && c < 0xf8f4)) {\r\n        length += 1;\r\n      } else {\r\n        length += 2;\r\n      }\r\n    }\r\n    return length;\r\n  }\r\n  componentDidMount(){\r\n    // LocalStorageから一覧を取得してstateに保存する\r\n    let lists = window.localStorage.getItem('private')\r\n    if (lists) {\r\n      lists = JSON.parse(lists)\r\n      this.setState({todo: lists});\r\n    }\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({initFlag: false});\r\n    const key = e.target.name;\r\n    const value = this.getByteLength(e.target.value)\r\n    const { info, message } = this.state;\r\n    this.setState({\r\n      info: { ...info, [key]: value }\r\n    });\r\n    this.setState({\r\n      message: {\r\n        ...message,\r\n        [key]: Validation.formValidate(key, value)\r\n      }\r\n    });\r\n  };\r\n  // データ保存処理\r\n  handleAdd(e){\r\n    // リダイレクト防止\r\n    e.preventDefault();\r\n    // フォームから受け取ったデータをオブジェクトに挿入して、stateのtodo配列に追加\r\n    this.state.todo.push({title: e.target.title.value}); // まだ保存されていない\r\n    // setStateを使ってstateを上書き\r\n    this.setState({todo: this.state.todo}); // 保存完了\r\n    // inputのvalueを空に\r\n    e.target.title.value = '';\r\n    this.setState({initFlag: true});\r\n    // JSON形式でLocalStorageに保存する\r\n    let json = JSON.stringify(this.state.todo)\r\n    window.localStorage.setItem('private', json)\r\n  }\r\n  // データ削除\r\n  handleDone(i){\r\n    // todo配列からi番目から1つ目のデータを除外\r\n    this.state.todo.splice(i,1);\r\n    // setStateでtodo配列を上書き\r\n    this.setState({todo: this.state.todo});\r\n    // LocalStorageからデータを取得して対象のlistを削除して保存する\r\n    let privateLists = window.localStorage.getItem('private')\r\n    privateLists = JSON.parse(privateLists)\r\n    let targetList = privateLists[i]\r\n    privateLists.splice(i,1);\r\n    let json = JSON.stringify(privateLists)\r\n    window.localStorage.setItem('private', json)\r\n    this.handleDoneAdd(targetList[\"title\"])\r\n  }\r\n  handleRemove(i){\r\n    // todo配列からi番目から1つ目のデータを除外\r\n    this.state.todo.splice(i,1);\r\n    // setStateでtodo配列を上書き\r\n    this.setState({todo: this.state.todo});\r\n    // LocalStorageからデータを取得して対象のlistを削除して保存する\r\n    let privateLists = window.localStorage.getItem('private')\r\n    privateLists = JSON.parse(privateLists)\r\n    privateLists.splice(i,1);\r\n    let json = JSON.stringify(privateLists)\r\n    window.localStorage.setItem('private', json)\r\n  }\r\n  // done追加処理\r\n  handleDoneAdd(title){\r\n    let doneLists = window.localStorage.getItem('done')\r\n    if (!doneLists) {\r\n      doneLists = []\r\n    } else {\r\n      doneLists = JSON.parse(doneLists)\r\n    }\r\n    let date = new Date\r\n    let today = date.getFullYear() + '-' + (\"0\"+(date.getMonth() + 1)).slice(-2) + '-' + (\"0\"+date.getDate()).slice(-2)\r\n    doneLists[Object.keys(doneLists).length] = {title:title, date:today, type:'private'}\r\n    let json = JSON.stringify(doneLists)\r\n    window.localStorage.setItem('done', json)\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"siimple-box siimple--bg-dark\">\r\n        <h1 className=\"siimple-box-title siimple--color-white\">Private</h1>\r\n        <Form initFlag={this.state.initFlag} message={ this.state.message } handleAdd={this.handleAdd} handleChange={this.handleChange}/>\r\n        <div className=\"siimple-rule\"></div>\r\n        <TodoList todos={this.state.todo} handleRemove={this.handleRemove} handleDone={this.handleDone}/>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\n\r\nlet btn = { cursor: 'pointer' };\r\nlet isDisplayDate = true\r\nlet todos = []\r\n\r\nconst DoneList = (props) => (\r\n   <div className=\"siimple-box\">\r\n     {props.todos.map((todo, i) => {\r\n       if (i === 0) {\r\n         isDisplayDate = true\r\n       }\r\n       if (i !== 0) {\r\n          if (props.todos[i - 1][\"date\"] === todo[\"date\"]) {\r\n            isDisplayDate = false\r\n          } else {\r\n            isDisplayDate = true\r\n          }\r\n       }\r\n       return <div key={i}>{isDisplayDate && <h3 className=\"siimple--color-white\">{todo.date}</h3>}<div key={i} className=\"siimple-list-item siimple--bg-white fs10 btlr5 btrr5 m-bottom-10\">{todo.title} <span className=\"siimple-tag siimple-tag--error siimple-hover\" style={btn} onClick={() => props.handleRemove(i)}>Delete</span></div></div>\r\n     })}\r\n   </div>\r\n);\r\n\r\nexport default DoneList;","import React, { Component } from 'react';\nimport DoneList from  './DoneList';\n\nexport default class Done extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      todo: []\n    };\n     this.handleRemove = this.handleRemove.bind(this);\n  }\n  componentDidMount(){\n    // LocalStorageから一覧を取得してstateに保存する\n    let lists = window.localStorage.getItem('done')\n    if (lists) {\n      lists = JSON.parse(lists)\n      lists.sort(function(a,b){\n        if(a.date > b.date) return -1;\n        if(a.date < b.date) return 1;\n        return 0;\n      })\n      this.setState({todo: lists});\n    }\n  }\n  // データ削除\n  handleRemove(i){\n    // todo配列からi番目から1つ目のデータを除外\n    this.state.todo.splice(i,1);\n    // setStateでtodo配列を上書き\n    this.setState({todo: this.state.todo});\n    // LocalStorageからデータを取得して対象のlistを削除して保存する\n    let workLists = window.localStorage.getItem('done')\n    workLists = JSON.parse(workLists)\n    let targetList = workLists[i]\n    workLists.splice(i,1);\n    let json = JSON.stringify(workLists)\n    window.localStorage.setItem('done', json)\n  }\n  render() {\n    return (\n      <div className=\"siimple-box siimple--bg-dark\">\n        <h1 className=\"siimple-box-title siimple--color-white\">Done</h1>\n        <div className=\"siimple-rule\"></div>\n        <DoneList todos={this.state.todo} handleRemove={this.handleRemove}/>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nimport Top from './Top';\r\nimport Work from './Work';\r\nimport Private from './Private';\r\nimport Done from './Done';\r\n\r\nlet style = { textDecoration: 'none', color: \"#fff\" };\r\n\r\nfunction Headers() {\r\n  return (\r\n  <div className=\"siimple-navbar\">\r\n      <div className=\"siimple--float-left\">\r\n        <div className=\"siimple-btn siimple-btn--red m-right-5 fs12\">\r\n          <Link to = \"/TODOOS\" style={style}>TOP</Link>\r\n        </div>\r\n        <div className=\"siimple-btn siimple-btn--orange m-right-5 fs12\">\r\n          <Link to = \"/TODOOS/work\" style={style}>Work</Link>\r\n        </div>\r\n        <div className=\"siimple-btn siimple-btn--yellow m-right-5 fs12\">\r\n          <Link to = \"/TODOOS/private\" style={style}>Private</Link>\r\n        </div>\r\n        <div className=\"siimple-btn siimple-btn--green fs12\">\r\n          <Link to = \"/TODOOS/done\" style={style}>Done</Link>\r\n        </div>\r\n      </div>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default class Menu extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          {Headers()}\r\n          <Route path=\"/TODOOS\" exact component={Top}/>\r\n          <Route path=\"/TODOOS/work\" component={Work}/>\r\n          <Route path=\"/TODOOS/private\" component={Private}/>\r\n          <Route path=\"/TODOOS/done\" component={Done}/>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport Menu from './components/Menu';\n\nReactDOM.render(<Menu />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}